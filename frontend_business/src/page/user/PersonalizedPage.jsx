import React, { useState, useEffect } from 'react';
import Header from '../../components/Header';
import Footer from '../../components/Footer';
import { useNavigate } from 'react-router-dom';
import '../../css/PersonalizedPage.css';
import { PuffLoader } from 'react-spinners';



function PersonalizedPage() {
    const [type, setType] = useState('Coffee');
    const [budget, setBudget] = useState('50,000');
    const [customBudget, setCustomBudget] = useState('');
    const [rating, setRating] = useState(5);
    const [bestPlaces, setBestPlaces] = useState([]);
    const [userMessage, setUserMessage] = useState('');
    const [categories, setCategories] = useState([]);
    const [isLoadingPlaces, setIsLoadingPlaces] = useState(false);

    const navigate = useNavigate();

    useEffect(() => {
        const fetchCategories = async () => {
            try {
                const res = await fetch(`${import.meta.env.VITE_BE_URL}/api/category`);
                const data = await res.json();
                setCategories(data.categories);
            } catch (error) {
                console.error('Failed to load categories:', error);
            }
        };
        fetchCategories();
    }, []);

    const handleSendMessage = async () => {
        if (!userMessage.trim()) return;

        const formattedText = `Y√™u c·∫ßu: ${userMessage}, lo·∫°i doanh nghi·ªáp: ${type}, gi√° t·ªëi ƒëa: ${budget === 'T·ª± ch·ªçn...' ? customBudget : budget.replace(/,/g, '')}, ƒë√°nh gi√°: ${rating} sao`;

        try {
            setIsLoadingPlaces(true);
            const res = await fetch(`${import.meta.env.VITE_BE_URL}/api/ai/recommend`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ text: formattedText }),
            });

            const data = await res.json();

            if (Array.isArray(data) && data.length > 0) {
                setBestPlaces(data.slice(0, 6));
            } else {
                setBestPlaces([]);
            }
        } catch (error) {
            console.error('Failed to get AI recommendations:', error);
            setBestPlaces([]);
        } finally {
            setIsLoadingPlaces(false);
        }

        setUserMessage('');
    };

    return (
        <>
            <Header />
            <div className="personalized-page">
                <div className="personalized-welcome-section">
                    <div className="personalized-welcome-text">
                        <h1 className="personalized-welcome-title">
                            Ch√†o m·ª´ng ƒë·∫øn v·ªõi tr·ª£ l√Ω t√¨m ki·∫øm ho√†n h·∫£o!
                        </h1>

                        <div className="personalized-welcome-content">
                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üé´</span>
                                <div>
                                    <p className="personalized-item-title">
                                        T√¨m ki·∫øm nhu c·∫ßu - ƒë√∫ng ng∆∞·ªùi, ƒë√∫ng th·ªùi ƒëi·ªÉm
                                    </p>
                                    <p className="personalized-item-description">
                                        H·ªó tr·ª£ ng∆∞·ªùi d√πng th√¥ng qua l·ª±a ch·ªçn ti√™u ch√≠ v√† ng√†nh c·∫ßn t√¨m ki·∫øm (nh∆∞ ƒë·ªãa ƒëi·ªÉm, m·ª©c ti√™u, s·ªë ƒë√≠ch), ƒë·ªÉ ƒë∆∞a xu h∆∞·ªõng k·∫øt qu·∫£ ph√π h·ª£p t·ªëi ∆∞u theo t·ª´ng c√° nh√¢n, kh√¥ng c·∫ßn ph·∫£i l·ªçc c√¥ng.
                                    </p>
                                </div>
                            </div>

                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üéà</span>
                                <div>
                                    <p className="personalized-item-title">
                                        Giao di·ªán th√¥ng minh - k·∫øt h·ª£p gi·ªØa chatbot v√† t√πy ch·ªçn linh ho·∫°t
                                    </p>
                                    <p className="personalized-item-description">
                                        Ng∆∞·ªùi d√πng c√≥ th·ªÉ t∆∞∆°ng t√°c nhanh qua chatbot ho·∫∑c s·ª≠ d·ª•ng c√°c t√πy ch·ªçn s·∫µn c√≥ ƒë·ªÉ t√¨m ki·∫øm ch√≠nh x√°c.
                                    </p>
                                </div>
                            </div>

                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üíé</span>
                                <div>
                                    <p className="personalized-item-title">
                                        ƒê·ªìng c∆° ƒë·ªÉ xu·∫•t th√¥ng minh - h·ªçc t·ª´ nh√¢n vi√™n, li√™n t·ª•c t·ªëi ∆∞u
                                    </p>
                                    <p className="personalized-item-description">
                                        H·ªá th·ªëng AI ƒë·ªÉ h·ªçc h√†nh vi ng∆∞·ªùi d√πng: c√°c t√¨m ki·∫øm tr∆∞·ªõc, l∆∞·ª£t nh·∫•n, th·ªùi gian xem,... ƒë·ªÉ ƒë∆∞a d·ª± ƒëo√°n ra g·ª£i √Ω th√¥ng minh v√† s√°t v·ªõi nhu c·∫ßu h∆°n theo th·ªùi gian.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* Right Image Section */}
                    <div className="personalized-welcome-image">
                        <div className="personalized-image-placeholder">
                            <img src="../public/1.png" alt="Welcome Image" />
                        </div>
                    </div>
                </div>

                {/* Search Section */}
                <div className="personalized-search-section">
                    {/* Filter Section */}
                    <div className="personalized-filter-container">
                        <h2 className="personalized-search-title">
                            Tr·ªü l√£i ·ªü gi√∫p t√¨m ki·∫øm theo y√™u c·∫ßu c·ªßa b·∫°n!
                        </h2>
                        <p className="personalized-search-subtitle">
                            Gi√∫p t√¨m ki·∫øm theo nhu c·∫ßu c·ªßa c√° nh√¢n h√≥a, th√™m v√†o danh s√°ch y√™u th√≠ch ƒë·ªÉ chia.
                        </p>
                        <p className="personalized-filter-info">
                            <span className="personalized-filter-label">Ti√™u ch√≠ c·ªßa b·∫°n:</span> L·ª±a ch·ªçn ti√™u ch√≠ gi√∫p tr·ªü l√Ω AI ƒë∆∞a ra l·ª±a ch·ªçn ph√π h·ª£p nh·∫•t cho b·∫°n!
                        </p>

                        {/* Type Filter */}
                        <div className='personalized-chat-filter'>
                            <div className='personalized-chat-filter-detail'>
                                <div className="personalized-filter-group">
                                    <label className="personalized-filter-label">Lo·∫°i doanh nghi·ªáp:</label>
                                    <div className="personalized-filter-options">
                                        {categories.map((category) => (
                                            <button
                                                key={category.category_id}
                                                onClick={() => setType(category.category_name)}
                                                className={`personalized-filter-button ${type === category.category_name ? 'personalized-active' : ''}`}
                                            >
                                                {category.category_name}
                                            </button>
                                        ))}
                                    </div>
                                </div>

                                {/* Budget Filter */}
                                <div className="personalized-filter-group">
                                    <label className="personalized-filter-label">Gi·ªõi h·∫°n s·ªë ti·ªÅn:</label>
                                    <div className="personalized-filter-options">
                                        {['50,000', '100,000', '500,000', '1,500,000', 'T·ª± ch·ªçn...'].map((option) => (
                                            <button
                                                key={option}
                                                onClick={() => setBudget(option)}
                                                className={`personalized-filter-button ${budget === option ? 'personalized-active' : ''}`}
                                            >
                                                {option}
                                            </button>
                                        ))}
                                    </div>
                                    {budget === 'T·ª± ch·ªçn...' && (
                                        <div className="personalized-custom-budget-input">
                                            <input
                                                type="text"
                                                placeholder="Nh·∫≠p s·ªë ti·ªÅn c·ªßa b·∫°n"
                                                value={customBudget}
                                                onChange={(e) => setCustomBudget(e.target.value)}
                                                className="personalized-input-field"
                                            />
                                        </div>
                                    )}
                                </div>

                                {/* Rating Filter */}
                                <div className="personalized-filter-group">
                                    <label className="personalized-filter-label">ƒê√°nh gi√°: <span className='personalized-rating-label'>{rating} sao</span></label>
                                    <div className="personalized-rating-options">
                                        {[1, 2, 3, 4, 5].map((star) => (
                                            <span
                                                key={star}
                                                className={`personalized-star-rating ${star <= rating ? 'personalized-active' : ''}`}
                                                onClick={() => setRating(star)}
                                            >
                                                ‚òÖ
                                            </span>
                                        ))}
                                    </div>
                                </div>
                            </div>
                            <div className='personalized-chat-box'>
                                <textarea
                                    id="userMessage"
                                    className="personalized-textarea-full"
                                    placeholder="H√£y m√¥ t·∫£ y√™u c·∫ßu c·ªßa b·∫°n..."
                                    value={userMessage}
                                    onChange={(e) => setUserMessage(e.target.value)}
                                ></textarea>

                            </div>
                        </div>
                        <button
                            className="personalized-send-button"
                            onClick={handleSendMessage}
                            disabled={!userMessage.trim()}
                        >
                            G·ª≠i y√™u c·∫ßu
                        </button>
                    </div>
                </div>

                {/* Best Places Section */}
                <section className="personalized-best-places-section">
                    <div className="container">
                        <h2>ƒê·ªãa ƒëi·ªÉm g·ª£i √Ω</h2>

                        {isLoadingPlaces ? (
                            <div className="loader-container" style={{ display: 'flex', justifyContent: 'center', padding: '2rem', height: '12rem' }}>
                                <PuffLoader size={60} />
                            </div>
                        ) : bestPlaces.length > 0 ? (
                            <div className="discover-places-grid">
                                {bestPlaces.map((place) => (
                                    <div
                                        key={place._id}
                                        className="discover-place-card"
                                        onClick={() => navigate(`/business/${place._id}`)}
                                        style={{ cursor: 'pointer' }}
                                    >
                                        <div className="discover-place-image">
                                            <img
                                                src={place.business_image?.[0] || '/placeholder.jpg'}
                                                alt={place.business_name}
                                                loading="lazy"
                                                onError={(e) => {
                                                    e.target.src = '/1.png';
                                                }}
                                            />
                                        </div>
                                        <div className="discover-place-info">
                                            <h3>{place.business_name}</h3>
                                            <p className="discover-place-location">{place.business_address}</p>
                                            <div className="discover-place-meta">
                                                <span className={`discover-status ${place.business_status ? 'open' : 'closed'}`}>
                                                    {place.business_status ? 'ƒêang m·ªü c·ª≠a' : 'ƒê√£ ƒë√≥ng c·ª≠a'}
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        ) : (
                            <h4 className='discover-place-none'>Kh√¥ng c√≥ ƒë·ªãa ƒëi·ªÉm n√†o ph√π h·ª£p</h4>
                        )}
                    </div>
                </section>
            </div>
            <Footer />
        </>
    );
}

export default PersonalizedPage;